@using PagedList.Mvc
@using TechJunk.Web.Helpers
@model PagedList.IPagedList<TechJunk.Models.ViewModels.Sales.ShortSaleVm>
@{
    ViewBag.Title = "All Sales";
}

<h2 class="sales-title">All Sales</h2>

<div class="search-wrapper">
    @using (Html.BeginForm("AllSales", "Sales", new { area = "Admin" }, FormMethod.Get))
    {
        <strong> Search sales by Title and Category: </strong>
        @Html.TextBox("search", null, new { @class = "form-control input-center" })
        @Html.EnumDropDownListFor(vm => vm.First().Category, "All", new { @class = "form-control input-center" })
        <input type="submit" name="submit" value="Search" class="btn btn-default btn-md" />
    }
</div>

<div class="sales-container profile-sales-fix">
    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th></th>
                <th>@Html.Name("Title")</th>
                <th>@Html.Name("Seller")</th>
                <th>@Html.Name("Category")</th>
                <th>@Html.Name("Price")</th>
                <th>@Html.Name("Date posted")</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var sale in Model)
            {
                <tr>
                    <div class="sale-img"><td>@Html.Image(sale.Url, "Sale Image")</td></div>
                    <td>@Html.DisplayFor(vm => sale.Title)</td>
                    <td>@Html.DisplayFor(vm => sale.Seller)</td>
                    <td>@Html.DisplayFor(vm => sale.Category)</td>
                    <td>@Html.DisplayFor(vm => sale.Price)$</td>
                    <td>@Html.DisplayFor(vm => sale.PostDate)</td>
                    <td>
                        @Html.ActionLink("Details", "Details", new { id = sale.Id }, new { @class = "btn btn-info btn-lg" })
                        @Html.ActionLink("Delete", "Delete", new { id = sale.Id }, new { @class = "btn btn-lg btn-danger" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>


@Html.PagedListPager(Model, pageNumber => Url.Action("All", new
{
    pageNumber,
    option = Request.QueryString["Category"],
    search = Request.QueryString["search"]
}))